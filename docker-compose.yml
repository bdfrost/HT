--- 
version: "3"
networks:
  default:
    driver: bridge
    ipam:
      config:
      - subnet: 172.16.239.0/24
  traefik_proxy: 
    external: 
      name: traefik_proxy
  macvlan_network:
    driver: macvlan
    driver_opts:
      parent: ens160
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24
services:
  samba:
    container_name: WinShare
    hostname: samba
    image: sixeyed/samba
    volumes:
    - /mnt/storage/media/fileshare:/fileshare
    ports:
    - "139:139"
    - "445:445"
    - "137:137/udp"
    - "138:138/udp"
    command: samba.sh -s "fileshare;/fileshare;yes;no;yes;all" 
    mem_limit: 1g
    restart: always
  avahi:
    container_name: avahi
    image: solidnerd/avahi:0.7
    network_mode: host
    volumes:
     - /mnt/storage/appdata/avahi/:/etc/avahi:ro
    environment:
      - TZ=America/Chicago
      - "PUID=${PUID}"
      - "PGID=${PGID}"    
    restart: always
  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:stable
    volumes:
      - /mnt/storage/appdata/home-assistant/:/config
    devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0
    #   - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    environment:
      - TZ=America/Chicago
      - "PUID=${PUID}"
      - "PGID=${PGID}"    
    restart: always
    network_mode: host
  inventory-hunter:
    network_mode: host
    container_name: inventory-hunter
    environment: 
      - "ScalperWebhook=${ScalperWebhook}"
    image: ericjmarti/inventory-hunter:latest
    command: --alerter=slack --webhook=$ScalperWebhook
    volumes:
      - /mnt/storage/appdata/inventory-hunter/data:/data
      - /mnt/storage/appdata/inventory-hunter/log:/log
      - /mnt/storage/appdata/inventory-hunter/3070.yaml:/config.yaml
    restart: unless-stopped 
  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - TZ=America/Chicago
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    volumes:
      - /mnt/storage/appdata/nextcloud/config:/config
      - /mnt/storage/appdata/nextcloud/data:/data
    restart: unless-stopped
    ports:
      - 443:443
    # mac_address: 02:42:c0:a8:84:23
    networks: 
      macvlan_network:
        ipv4_address: 192.168.100.11
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
      - UMASK_SET=022
    volumes:
      - "/mnt/storage/media/movies:/movies"
      - "/mnt/storage-usb/media/tv:/tv"
      - "/mnt/storage/appdata/bazarr/config:/config"
    restart: unless-stopped
    labels: 
      - traefik.enable=true
      - traefik.backend=bazarr
      - "traefik.frontend.rule=Host:bazarr.${DOMAINNAME}"
      - traefik.port=6767
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
  nzbhydra2:
    image: linuxserver/nzbhydra2
    container_name: nzbhydra2
    environment:
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    restart: unless-stopped
    volumes:
      - /mnt/storage/appdata/nzbhydra2/config:/config
      - /mnt/storage/appdata/nzbhydra2/downloads:/downloads
    labels: 
      - traefik.enable=true
      - traefik.backend=nzbhydra2
      - "traefik.frontend.rule=Host:nzbhydra2.${DOMAINNAME}"
      - traefik.port=5076
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
  # ubooquity:
  #   image: linuxserver/ubooquity:latest
  #   container_name: ubooquity
  #   environment:
  #     - "TZ=${TZ}"
  #     - "PUID=${PUID}"
  #     - "PGID=${PGID}"
  #   volumes:
  #     - /mnt/storage/appdata/ubooquity:/config
  #     - /mnt/storage/media/downloads/book-downloads:/downloads
  #     - /mnt/storage/media/books:/books
  #   # ports:
  #   #   - 2202:2202
  #   #   - 2203:2203
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=ubooquity"
  #     - "traefik.frontend.rule=Host:ubooquity.${DOMAINNAME}"
  #     - "traefik.port=2202"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - traefik.frontend.headers.SSLHost=frost.haus
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=false"
  readarr:
    image: hotio/readarr:nightly
    container_name: readarr
    environment:
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - UMASK_SET=002
    volumes:
      - /mnt/storage/appdata/readarr:/config
      - /mnt/storage/media/downloads/book-downloads:/downloads
      - /mnt/storage/media/books:/books
    links:
      - sabnzbd
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=readarr"
      - "traefik.frontend.rule=Host:readarr.${DOMAINNAME}"
      - "traefik.port=8787"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - traefik.frontend.headers.SSLHost=frost.haus
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
  netdata: 
    environment: 
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    container_name: netdata
    image: netdata/netdata:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=netdata
      - "traefik.frontend.rule=Host:netdata.${DOMAINNAME}"
      - traefik.port=19999
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
    security_opt: 
      - "apparmor:unconfined"
    volumes: 
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/mnt/storage/appdata/netdata:/etc/netdata"
  organizr: 
    container_name: organizr
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
      - "fpm=false"
    image: organizr/organizr:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=organizr
      - "traefik.frontend.rule=Host:${DOMAINNAME}"
      - traefik.port=80
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/organizr:/config"
  ouroboros: 
    container_name: ouroboros
    environment: 
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - "IGNORE=mongo influxdb postgres mariadb"
      - TZ=America/Chicago
    image: pyouroboros/ouroboros:latest
    restart: unless-stopped
    volumes: 
      - "/var/run/docker.sock:/var/run/docker.sock"
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    volumes:
      - /mnt/storage/media/download-reprocess:/download-reprocess
      - /mnt/storage/appdata/plex:/config
      - /mnt/storage/appdata/tmp:/tmp
      - /mnt/storage/appdata/tmp:/transcode
      - /mnt/storage/media/tv:/data/tvshows
      - /mnt/storage/media/gphotos/photos:/data/photos
      - /mnt/storage/media/movies:/data/movies
      - /mnt/storage/appdata/shared:/shared
    environment:
      - VERSION=public
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Chicago
      - PLEX_CLAIM=${PLEX_CLAIM_CODE}
    network_mode: host
    restart: always
  portainer: 
    container_name: portainer
    image: portainer/portainer-ce:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=portainer
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - traefik.port=9000
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
  radarr: 
    container_name: radarr
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    image: linuxserver/radarr:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=radarr
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
      - traefik.port=7878
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/radarr:/config"
      - "/mnt/storage/media/movies:/movies"
      - "/mnt/storage/appdata/shared:/shared"
      - "/mnt/storage/media/downloads/movie-downloads:/movie-downloads"
  sabnzbd: 
    container_name: sabnzbd
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
    image: linuxserver/sabnzbd:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=sabnzbd
      - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
      - traefik.port=8080
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/sabnzbd/config:/config"
      - "/mnt/storage/media/incomplete-downloads:/incomplete-downloads"
      - "/mnt/storage/media/downloads/book-downloads:/book-downloads"
      - "/mnt/storage/media/downloads/comic-downloads:/comic-downloads"
      - "/mnt/storage/media/downloads/movie-downloads:/movie-downloads"
      - "/mnt/storage/media/downloads/tv-downloads:/tv-downloads"
      - "/mnt/storage/media/downloads/misc-downloads:/misc-downloads"
      - "/mnt/storage/appdata/shared:/shared"
  sonarr: 
    container_name: sonarr
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    image: linuxserver/sonarr:preview
    labels: 
      - traefik.enable=true
      - traefik.backend=sonarr
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - traefik.port=8989
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    links: 
      - sabnzbd
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/sonarr:/config"
      - "/mnt/storage/media/tv_import:/tv_import"
      - "/mnt/storage/media/tv:/tv"
      - "/mnt/storage/media/downloads/tv-downloads:/tv-downloads"
      - "/mnt/storage/appdata/shared:/shared"
  tautulli: 
    container_name: tautulli
    depends_on: 
      - plex
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
    image: linuxserver/tautulli:latest
    labels: 
      - traefik.enable=true
      - traefik.backend=tautulli
      - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
      - traefik.port=8181
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
    links: 
      - plex
    networks: 
      - traefik_proxy
    restart: always
    volumes: 
      - "/mnt/storage/appdata/plexpy:/config"
      - "/mnt/storage/appdata/plex/Library/Application\\ Support/Plex\\ Media\\ Server/Logs:/logs:ro"
      - "/mnt/storage/appdata/shared:/shared"
  traefik: 
    container_name: traefik
    domainname: "${DOMAINNAME}"
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
      - "CF_API_EMAIL=${CLOUDFLARE_EMAIL}"
      - "CF_API_KEY=${CLOUDFLARE_API_KEY}"
    hostname: traefik
    image: "traefik:1.7"
    dns: 8.8.8.8
    labels: 
      - traefik.enable=true
      - traefik.backend=traefik
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - traefik.port=8080
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.protocol=http
      - "traefik.frontend.headers.SSLHost=traefik.${DOMAINNAME}"
      - traefik.frontend.passHostHeader=true
      - traefik.frontend.headers.SSLForceHost=true
      - traefik.frontend.headers.customResponseHeaders=X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      - traefik.frontend.headers.frameDeny=true
      - "traefik.frontend.headers.customFrameOptionsValue=allow-from https:${DOMAINNAME}"
    networks: 
    - default
    - traefik_proxy
    ports: 
      - "443:443"
      - "8145:8080"
    restart: always
    volumes: 
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/storage/appdata/traefik:/etc/traefik"
      - "/mnt/storage/appdata/shared/traefik:/shared"
  duplicati:
    image: linuxserver/duplicati:amd64-latest
    container_name: duplicati
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
    volumes:
      - "/mnt/storage/appdata/duplicati:/config"
      - /mnt:/source
    restart: unless-stopped
    labels: 
      - traefik.enable=true
      - traefik.backend=duplicati
      - "traefik.frontend.rule=Host:duplicati.${DOMAINNAME}"
      - traefik.port=8200
      - traefik.docker.network=traefik_proxy
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=frost.haus
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=false
  # shinobi:
  #   image: shinobisystems/shinobi:dev
  #   container_name: shinobi
  #   volumes:
  #     - /mnt/storage/appdata/Shinobi/config:/config
  #     - /mnt/storage/appdata/Shinobi/customAutoLoad:/home/Shinobi/libs/customAutoLoad
  #     - /mnt/storage/media/Shinobi/database:/var/lib/mysql
  #     - /mnt/storage/media/Shinobi/videos:/home/Shinobi/videos
  #     - /mnt/storage/appdata/Shinobi/plugins:/home/Shinobi/plugins
  #     - /dev/shm/Shinobi/streams:/dev/shm/streams
  #     - /etc/localtime:/etc/localtime:ro
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #   environment:
  #     - TZ=America/Chicago
  #     - "PUID=${PUID}"
  #     - "PGID=${PGID}"
  #     - SSL_ENABLED=false
  #     - PLUGIN_KEYS={"Tensorflow":"$TENSORFLOW_PLUGIN_KEY"}
  #   labels:
  #     - traefik.enable=true
  #     - traefik.backend=shinobi
  #     - "traefik.frontend.rule=Host:shinobi.${DOMAINNAME}"
  #     - traefik.port=8080
  #     - traefik.docker.network=traefik_proxy
  #     - traefik.frontend.headers.SSLRedirect=true
  #     - traefik.frontend.headers.STSSeconds=315360000
  #     - traefik.frontend.headers.browserXSSFilter=true
  #     - traefik.frontend.headers.contentTypeNosniff=true
  #     - traefik.frontend.headers.forceSTSHeader=true
  #     - traefik.frontend.headers.SSLHost=frost.haus
  #     - traefik.frontend.headers.STSIncludeSubdomains=true
  #     - traefik.frontend.headers.STSPreload=true
  #     - traefik.frontend.headers.frameDeny=false
  # shinobiplugintensorflow:
  #   image: shinobisystems/shinobi-tensorflow:latest
  #   container_name: shinobitensorflow
  #   volumes:
  #     - /mnt/storage/appdata/Shinobi/docker-plugins/tensorflow:/config
  #   restart: unless-stopped
  #   network_mode: host
  #   environment:
  #     - PLUGIN_KEY=$TENSORFLOW_PLUGIN_KEY
  #     - PLUGIN_HOST=shinobi
  #     - TZ=America/Chicago
  #     - "PUID=${PUID}"
  #     - "PGID=${PGID}"
  speedtest:
    image: henrywhitaker3/speedtest-tracker
    container_name: speedtest
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
      - OOKLA_EULA_GDPR=true
    volumes:
     - "/mnt/storage/appdata/speedtest:/config"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    labels: 
     - traefik.enable=true
     - traefik.backend=speedtest
     - "traefik.frontend.rule=Host:speedtest.${DOMAINNAME}"
     - traefik.port=80
     - traefik.docker.network=traefik_proxy
     - traefik.frontend.headers.SSLRedirect=true
     - traefik.frontend.headers.STSSeconds=315360000
     - traefik.frontend.headers.browserXSSFilter=true
     - traefik.frontend.headers.contentTypeNosniff=true
     - traefik.frontend.headers.forceSTSHeader=true
     - traefik.frontend.headers.SSLHost=frost.haus
     - traefik.frontend.headers.STSIncludeSubdomains=true
     - traefik.frontend.headers.STSPreload=true
     - traefik.frontend.headers.frameDeny=false
  monitorr:
    image: monitorr/monitorr
    container_name: monitorr
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
    volumes:
     - "/mnt/storage/appdata/monitorr:/app"
    restart: unless-stopped
    labels: 
     - traefik.enable=true
     - traefik.backend=monitorr
     - "traefik.frontend.rule=Host:monitorr.${DOMAINNAME}"
     - traefik.port=80
     - traefik.docker.network=traefik_proxy
     - traefik.frontend.headers.SSLRedirect=true
     - traefik.frontend.headers.STSSeconds=315360000
     - traefik.frontend.headers.browserXSSFilter=true
     - traefik.frontend.headers.contentTypeNosniff=true
     - traefik.frontend.headers.forceSTSHeader=true
     - traefik.frontend.headers.SSLHost=frost.haus
     - traefik.frontend.headers.STSIncludeSubdomains=true
     - traefik.frontend.headers.STSPreload=true
     - traefik.frontend.headers.frameDeny=false
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Chicago
     # - BASE_URL=/ombi #optional
    volumes:
      - "/mnt/storage/appdata/ombi:/config"
    restart: unless-stopped
    labels: 
     - traefik.enable=true
     - traefik.backend=ombi
     - "traefik.frontend.rule=Host:ombi.${DOMAINNAME}"
     - traefik.port=3579
     - traefik.docker.network=traefik_proxy
     - traefik.frontend.headers.SSLRedirect=true
     - traefik.frontend.headers.STSSeconds=315360000
     - traefik.frontend.headers.browserXSSFilter=true
     - traefik.frontend.headers.contentTypeNosniff=true
     - traefik.frontend.headers.forceSTSHeader=true
     - traefik.frontend.headers.SSLHost=frost.haus
     - traefik.frontend.headers.STSIncludeSubdomains=true
     - traefik.frontend.headers.STSPreload=true
     - traefik.frontend.headers.frameDeny=false